# ------------------------------------------------------------------ #
#                                                                    #
#           SymPy CI script for Github Actions                       #
#                                                                    #
#   Run on the release branch and builds the release artifacts.      #
#                                                                    #
# ------------------------------------------------------------------ #

name: release
on:
  push:
    branches:
      - '1.13'
    tags:
      - 'sympy-1.13.*'
  pull_request:
    branches:
      - '1.13'
env:
  release_branch: '1.13'
  release_version: '1.13.0rc2'
  final_release_version: '1.13.0'
  previous_version: '1.12.1'
  dev_version: '1.14-dev'

jobs:

  # -------------------- Build artifacts --------------------------- #

  build:

    runs-on: ubuntu-20.04
    steps:
      - run: echo "null"

  # -------------------- Test installation ------------------------- #

  

  # -------------------- Upload to PyPI proper --------------------- #

  pypi-publish:
    name: Publish to PyPI
    needs: [build]
    # Run when a tag is pushed (not sure if this works)
    environment:
      name: pypi
      url: https://pypi.org/p/sympy
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - run: echo "null"

  # -------------------- Make a GitHub release --------------------- #

  github-publish:
    name: Publish GitHub release
    needs: [build, pypi-publish]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - run: echo "null"

  # -------------------- Update the docs repository ---------------- #

  # Dummy job to determine whether the release is final
  check-final:
    name: Check whether the release is final
    needs: [build, pypi-publish]
    runs-on: ubuntu-latest
    outputs:
      # The env context is not available in jobs.<job id>.if so we set it here
      is-final: ${{ env.release_version == env.final_release_version }}
    steps:
      - run: echo "null"

  update-docs:
    name: Update the docs repository
    needs: [check-final]
    # Only run for a final release
    if: ${{ needs.check-final.outputs.is-final == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - run: echo "null"
